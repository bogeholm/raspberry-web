# https://docs.gitlab.com/ee/ci/yaml/#before_script-and-after_script
# https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#define-image-and-services-from-gitlab-ciyml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
# image: "rust:latest"

# Run tests with cargo
# The single threaded version of running tests would be:
#- cargo test --all --verbose -- --test-threads=1  
test:x86_64:
  image: "rust:latest"
  script:
    - rustc --version && cargo --version # Print version info for debugging
    - cargo test --all --verbose  # Not single threaded since this is running on x86_64

# Build and install binary as service on x86_64 Debian, start and stop the service
# https://github.com/mmstick/cargo-deb
# Check out https://github.com/mmstick/cargo-deb/blob/master/.travis.yml
#cargo_deb:x86_64:
#  image: "rust:latest"
#  before_script:
#    - cargo install cargo-deb
#    - cargo build --release
#  script:
#    - cargo deb

# Build binary for ARMv7 by cross compiling from x86_64
build:armv7:
  image: "rust:latest"
  before_script:
    - dpkg --add-architecture armhf
    - apt-get update -yqq
    - apt-get install -yqq build-essential gcc-arm-linux-gnueabihf libsqlite3-dev:armhf
    - rustup target add armv7-unknown-linux-gnueabihf
  script:
    - RUSTFLAGS="-C linker=arm-linux-gnueabihf-gcc" cargo build --target=armv7-unknown-linux-gnueabihf

test:coverage:
  image: "rust:latest"
  before_script:
    - apt-get update -yqq
    - apt-get install -yqq libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev zlib1g-dev
    - wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
    - tar xzf master.tar.gz
    - cd kcov-master
    - mkdir build
    - cd build
    - cmake
    - make
    - make install DESTDIR=/opt/kcov
    - cd ../..
    - rm -rf kcov-master
    - export PATH="$PATH:/opt/kcov/usr/local/bin/"
    - cargo install cargo-kcov

  